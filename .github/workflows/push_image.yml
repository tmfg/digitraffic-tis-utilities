name: "Build and push images to ECR"
on:
  workflow_run:
    workflows: [ "Release new version" ]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  BuildAndPushImagesToECR:
    name: "${{matrix.package}}"
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./ecs-tasks

    strategy:
      matrix:
        package:
          - gtfs-canonical-v4.0.0
          - gtfs-canonical-v4.1.0
          - netex-entur-v1.0.1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.OIDC_DEPLOY_ROLE_ARN }}
          aws-region: eu-north-1
          role-duration-seconds: 7200

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Extract CURRENT version
        id: version
        run: |
          echo "version=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          RULE_DIRECTORY: ${{ matrix.package }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.version.outputs.version }}
        run: |
          ECR_REPOSITORY="digitraffic-tis-rule-${RULE_DIRECTORY//./_}"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./${RULE_DIRECTORY}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
