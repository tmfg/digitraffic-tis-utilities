@startuml

!theme fintraffic_c4 from ../layout
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
title Container Diagram for Validation-Conversion (VACO)

LAYOUT_TOP_DOWN()

!includesub subsystems/vaco_queuehandler.puml!core
!includesub subsystems/vaco_validator.puml!core
!includesub subsystems/vaco_conversion.puml!core
!includesub subsystems/vaco_errorhandling.puml!core

''' External System: Generic
System_Boundary(sb_externals,"External systems") {
    System_Ext(input,"External system","Nplan, HSL, etc.")
    Person_Ext(editor,"External system user")
    System_Ext(authentication,"User authentication","Azure AD")
}
Rel_L(input,authentication,"Gets access token","OIDC/Oauth 2.0")

''' External System: AWS
System_Boundary(sb_aws, "Amazon Web Services") {
    System_Ext(aws_sqs, "AWS SQS", "Simple Queue Service")
    System_Ext(aws_s3, "AWS S3", "Simple Storage Service")
}
Lay_L(aws_s3, aws_sqs)

System_Ext(output,"External system","finap,digitraffic etc.")

Rel(input,handler,"Incoming data","presumably structured data")
' Rel_U :s at this point force external systems boundary to top where we want them
Rel_U(handler,authentication,"Validates token","https")
Rel_U(handlerfront,editor,"Receive information","https, email")

Lay_U(sb_aws,sb_queuehandler)
Lay_U(sb_aws,sb_externals)
Lay_R(sb_conversion,sb_validation)
Lay_D(sb_conversion,output)

Lay_D(sb_aws,sb_validation)
Lay_D(sb_aws,sb_conversion)
Lay_D(sb_aws,sb_errorhandling)

Rel(validator,aws_s3,"Validated results","structured data")
Rel_D(aws_sqs, inputvalidation, "processes new validation job message", "message queue")
Rel_U(inputvalidation,aws_s3,"Downloaded input package","possibly structured data")

Rel(outputvalidation,output,"Output data","structured data")

Rel(sb_validation,errorlogger,"Error messages","https API")
Rel(sb_conversion,errorlogger,"Error messages","https API")
Rel(errorlogger, handlerfront,"Error messages","https API")
Rel(handlerfront,authentication,"Authenticate","OIDC/Oauth 2.0")

Rel(handler, aws_sqs, "submits new validation job", "message queue")
Rel(validator, aws_sqs, "submits new conversion job", "message queue")
Rel(aws_sqs, converter, "processes new conversion job message", "message queue")

SHOW_LEGEND()
@enduml
